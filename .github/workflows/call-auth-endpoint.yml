name: Call Auth Endpoint and Use Token

on:
  workflow_dispatch:

jobs:
  call-endpoint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Call Auth Endpoint
        env:
          API_URL: https://supabase-links-m70y39mly-ms-projects-78bf567a.vercel.app/api/auth
          EMAIL: ${{ secrets.SUPABASE_EMAIL }}
          PASSWORD: ${{ secrets.SUPABASE_PASSWORD }}
        run: |
          echo "Making POST request to $API_URL"
          response=$(curl -X POST $API_URL \
            -H "Content-Type: application/json" \
            -d "{\"email\": \"${EMAIL}\", \"password\": \"${PASSWORD}\"}" \
            -w "\nHTTP_STATUS:%{http_code}")
          
          status_code=$(echo "$response" | grep HTTP_STATUS | awk -F':' '{print $2}')
          body=$(echo "$response" | sed '/HTTP_STATUS/d')

          echo "Response body: $body"
          echo "Status code: $status_code"

          if [ "$status_code" -ne 200 ]; then
            echo "Failed to call endpoint. Status code: $status_code"
            exit 1
          fi

          # Extract access token
          access_token=$(echo "$body" | jq -r '.session.access_token')
          echo "Access token: $access_token"

          # Save the token as a secret for future steps (if required)
          echo "ACCESS_TOKEN=$access_token" >> $GITHUB_ENV

      # Example of using the token in further requests (can be added as another job or step)
      - name: Use Access Token in Another API Call
        env:
          ACCESS_TOKEN: ${{ env.ACCESS_TOKEN }}
        run: |
          echo "Making another request with the access token"
          another_response=$(curl -X GET "https://example.com/protected-endpoint" \
            -H "Authorization: Bearer $ACCESS_TOKEN")
          
          echo "Another API Response: $another_response"
